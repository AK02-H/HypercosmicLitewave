Amin Khan
Milestone 2 v0.2 17/11/22
--------------------------------

New Functionality
-----------------

-Drawing sprites with 2 different blit functions, one for transparent images and another that doesn't support transparency but is faster
-Taking in user keyboard input to move sprites

Code Additions
--------------

-Blitting functions for drawing sprites to screen memory - a blit that supports transparency and a blit that doesn't but is faster.
-Vertical and horizontal movement for a sprite that can be controlled with the keyboard
-Defensive code to prevent sprites moving offscreen, preventing memory overflows when moving too far vertically, and preventing sreen looping when moving too far horizontally

Tests
-----

The transparent blit function is efficient as if the alpha of the pixel it's drawing is 0, it skips over the unecessary code, and this is the same if the alpha is 255
where the function skips over the unecessary alpha calculations

Tried adding a check to make sure the sprite has moved before drawing it, to save the program having to process blit functions if nothing was going to change. However
this optimization is useless outside of the state of the program right now because I was testing it with very few sprites, in the full engine this would not be efficient
to implement because there may be layering issues, like with other sprites having to move behind transparent sprites

I tried drawing each sprite many times to test the limits of the code. At 500 times each sprite, the program runs at around 50fps. However, when combined with the optimisation,
mentioned above, this is only when the sprites have to update their position. When they are still the framerate jumps back up to 1400fps because the program isn't doing anything

Notes
-----

When the framerate is low, the sprite movement is relatively slower. This can be fixed by calculating the deltatime and incorporating it into the sprite movement function
so the movement is consistent at all framerates.
